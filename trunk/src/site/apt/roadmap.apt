            ------
            Road map
            ------
            Sami Badawi
            ------
            2007/11/28

Road map

  This page is a about the direction that ShapeLogic might take, but it is not 
  set in stone.
  
  For more up to date information on ongoing development work look at this blog 
  {{{http://samibadawi.blogspot.com} Declarative Computer Vision}}.

* ShapeLogic v 0.9 soon to be released

  * Better integration of external user defined rule databases
  
  * Possibly move expression language from JEXL to Java 6 Scripting

  * Use Or tasks

  * Finish Javadoc for ShapeLogic 

  []

** Possibly move expression language from JEXL to Java 6 Scripting 
  
  Currently the rules in ShapeLogic are parsed from strings {{{http://commons.apache.org/jexl}Apache Commons JEXL}} library.
  
  So the letter A would have a rule saying:

  polygon.holeCount == 1

  This is not trivial since a variable say polygon.holeCount could have different values in different contexts.
  
  E.g. if there was a choice of 2 different thresholds levels, then in one part of the choice tree we could have
  
  polygon.holeCount == 1 and in another we could have
  
  polygon.holeCount == 2.

  These user defined rules might be changed from using JEXL to using the 
  {{{http://java.sun.com/javase/6/docs/technotes/guides/scripting/programmer_guide/index.html}Java 6 Scripting instead}}.

  JEXL has not been released for over 1 year, and it is a little awkward to 
  handle static fields and methods.
  It might also be better to let the user chose what scripting language they want to use.
  
  Currently there languages should be available for scripting: 
  {{{http://www.mozilla.org/rhino/scriptjava.html}JavaScript}}, 
  {{{http://www.beanshell.org}BeanShell}}, 
  {{{http://www.jython.org}Jython}}, 
  {{{http://groovy.codehaus.org}Groovy}} and 
  {{{http://jruby.codehaus.org}JRuby}}.

  One issue is that you cannot just use variable binding in a global scripting context.
  In the example from above if the variable polygon.holeCount does not exist in 
  the top context, Java 6 Scripting has some means to handle this problem.

  It is possible that there will be release of ShapeLogic 0.9 where you just 
  can select another rule database stored in a flat file or a database, 
  but using the current system, in order not to drag the next release out too long. 
  This should allow the users to define rules for matching a separate alphabet, say the Greek.


* Next ShapeLogic example application

  The next example application for ShapeLogic will be medical image processing.
  
  Possibly a problem presented by a Neuroscientists doing Alzheimer's research. 
  It is a very interesting problem, but it would take at least a few months to finish it.
