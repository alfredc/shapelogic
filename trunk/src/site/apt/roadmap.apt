            ------
            Road map
            ------
            Sami Badawi
            ------
            2007/11/28

Road map

  This page is a about the direction that ShapeLogic might take, but it is not 
  set in stone.
  
  For more up to date information on ongoing development work look at this blog 
  {{{http://samibadawi.blogspot.com} Declarative Computer Vision}}.

* ShapeLogic v 1.2 with particle analyzer soon to be released

  * More testing and improving of particle counter

  * Make it easier to set parameters for particle counter in a macro or a 
  configuration file

  * Improve particle counter to handle blobs.gif image shown here, this was not
  recognized as a particle image under ShapeLogic 1.1

  * Enable ROI for particle counter, 1.1 only works on whole images
  
  * Particle analyzer

    * Suitable for processing cells and organelles

    * Expand the particle counter to a full featured particle analyzer

    * Print report about each particle's color, area, standard deviation to a file

    * Vectorize particles by tracing the edge

    * Filter particles based geometric properties of the edge
  
    []

  []

  The main goal for 1.2 is to create an automatic color and gray scale 
  {{{particle.html} particle analyzer}}. 
  There are currently particle counters available for ImageJ, however, 
  ShapeLogic's particle counter and analyzer will function without manual user 
  intervention.
  
  The test images are taken from the sample images from ImageJ
  
[images/particles/blobs.gif] 

  blobs.gif

[images/particles/Cell_Colony.jpg] 

  Cell_Colony.jpg

[images/particles/embryos.jpg] 

  embryos.jpg
  
* Top priority changes
  
  * Example where ShapeLogic declarative programming is used with other libraries
  
  * Expanded unit testing
  
  * Bug fixes
  
  * Better documentation
  
  []
  
* Medium priorities changes
  
  * When running ShapeLogic as an plugin for ImageJ add a menu item for loading
  and running external rules in flat file or database format.
  
  * Make examples using
  {{{http://java.sun.com/javase/6/docs/technotes/guides/scripting/programmer_guide/index.html}
  Java 6 Scripting}}
  for rule database, this should give the user access to the 25 scripting 
  languages that are supported

  * Make the annotation of shapes more loosely coupled

  * Use Inversion of Control, to create object. IoC framework 
  {{{http://code.google.com/p/google-guice}Google Guice}}
  
  []

* More complex ShapeLogic example application

  Particle analyzer
  
  Possibly a problem presented by a Neuroscientists doing Alzheimer's research. 
  It is a very interesting problem, but it would take at least a few months to 
  finish it.
